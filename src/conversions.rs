/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
pub type int8_t = i8;
pub type int16_t = i16;
pub type int32_t = i32;
pub type int64_t = i64;
pub type uint8_t = u8;
pub type uint16_t = u16;
pub type uint32_t = u32;
pub type uint64_t = u64;
pub type int_least8_t = ::std::os::raw::c_char;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_long;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulong;
pub type int_fast8_t = ::std::os::raw::c_char;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intptr_t = isize;
pub type uintptr_t = usize;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394video_mode_t {
    DC1394_VIDEO_MODE_160x120_YUV444 = 64,
    DC1394_VIDEO_MODE_320x240_YUV422 = 65,
    DC1394_VIDEO_MODE_640x480_YUV411 = 66,
    DC1394_VIDEO_MODE_640x480_YUV422 = 67,
    DC1394_VIDEO_MODE_640x480_RGB8 = 68,
    DC1394_VIDEO_MODE_640x480_MONO8 = 69,
    DC1394_VIDEO_MODE_640x480_MONO16 = 70,
    DC1394_VIDEO_MODE_800x600_YUV422 = 71,
    DC1394_VIDEO_MODE_800x600_RGB8 = 72,
    DC1394_VIDEO_MODE_800x600_MONO8 = 73,
    DC1394_VIDEO_MODE_1024x768_YUV422 = 74,
    DC1394_VIDEO_MODE_1024x768_RGB8 = 75,
    DC1394_VIDEO_MODE_1024x768_MONO8 = 76,
    DC1394_VIDEO_MODE_800x600_MONO16 = 77,
    DC1394_VIDEO_MODE_1024x768_MONO16 = 78,
    DC1394_VIDEO_MODE_1280x960_YUV422 = 79,
    DC1394_VIDEO_MODE_1280x960_RGB8 = 80,
    DC1394_VIDEO_MODE_1280x960_MONO8 = 81,
    DC1394_VIDEO_MODE_1600x1200_YUV422 = 82,
    DC1394_VIDEO_MODE_1600x1200_RGB8 = 83,
    DC1394_VIDEO_MODE_1600x1200_MONO8 = 84,
    DC1394_VIDEO_MODE_1280x960_MONO16 = 85,
    DC1394_VIDEO_MODE_1600x1200_MONO16 = 86,
    DC1394_VIDEO_MODE_EXIF = 87,
    DC1394_VIDEO_MODE_FORMAT7_0 = 88,
    DC1394_VIDEO_MODE_FORMAT7_1 = 89,
    DC1394_VIDEO_MODE_FORMAT7_2 = 90,
    DC1394_VIDEO_MODE_FORMAT7_3 = 91,
    DC1394_VIDEO_MODE_FORMAT7_4 = 92,
    DC1394_VIDEO_MODE_FORMAT7_5 = 93,
    DC1394_VIDEO_MODE_FORMAT7_6 = 94,
    DC1394_VIDEO_MODE_FORMAT7_7 = 95,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394color_coding_t {
    DC1394_COLOR_CODING_MONO8 = 352,
    DC1394_COLOR_CODING_YUV411 = 353,
    DC1394_COLOR_CODING_YUV422 = 354,
    DC1394_COLOR_CODING_YUV444 = 355,
    DC1394_COLOR_CODING_RGB8 = 356,
    DC1394_COLOR_CODING_MONO16 = 357,
    DC1394_COLOR_CODING_RGB16 = 358,
    DC1394_COLOR_CODING_MONO16S = 359,
    DC1394_COLOR_CODING_RGB16S = 360,
    DC1394_COLOR_CODING_RAW8 = 361,
    DC1394_COLOR_CODING_RAW16 = 362,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394color_filter_t {
    DC1394_COLOR_FILTER_RGGB = 512,
    DC1394_COLOR_FILTER_GBRG = 513,
    DC1394_COLOR_FILTER_GRBG = 514,
    DC1394_COLOR_FILTER_BGGR = 515,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394byte_order_t {
    DC1394_BYTE_ORDER_UYVY = 800,
    DC1394_BYTE_ORDER_YUYV = 801,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct dc1394color_codings_t {
    pub num: uint32_t,
    pub codings: [dc1394color_coding_t; 11usize],
}
impl ::std::default::Default for dc1394color_codings_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct dc1394video_modes_t {
    pub num: uint32_t,
    pub modes: [dc1394video_mode_t; 32usize],
}
impl ::std::default::Default for dc1394video_modes_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394bool_t { DC1394_FALSE = 0, DC1394_TRUE = 1, }
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394switch_t { DC1394_OFF = 0, DC1394_ON = 1, }
#[derive(Copy, Clone)]
#[repr(i32)]
#[derive(Debug)]
pub enum dc1394error_t {
    DC1394_SUCCESS = 0,
    DC1394_FAILURE = -1,
    DC1394_NOT_A_CAMERA = -2,
    DC1394_FUNCTION_NOT_SUPPORTED = -3,
    DC1394_CAMERA_NOT_INITIALIZED = -4,
    DC1394_MEMORY_ALLOCATION_FAILURE = -5,
    DC1394_TAGGED_REGISTER_NOT_FOUND = -6,
    DC1394_NO_ISO_CHANNEL = -7,
    DC1394_NO_BANDWIDTH = -8,
    DC1394_IOCTL_FAILURE = -9,
    DC1394_CAPTURE_IS_NOT_SET = -10,
    DC1394_CAPTURE_IS_RUNNING = -11,
    DC1394_RAW1394_FAILURE = -12,
    DC1394_FORMAT7_ERROR_FLAG_1 = -13,
    DC1394_FORMAT7_ERROR_FLAG_2 = -14,
    DC1394_INVALID_ARGUMENT_VALUE = -15,
    DC1394_REQ_VALUE_OUTSIDE_RANGE = -16,
    DC1394_INVALID_FEATURE = -17,
    DC1394_INVALID_VIDEO_FORMAT = -18,
    DC1394_INVALID_VIDEO_MODE = -19,
    DC1394_INVALID_FRAMERATE = -20,
    DC1394_INVALID_TRIGGER_MODE = -21,
    DC1394_INVALID_TRIGGER_SOURCE = -22,
    DC1394_INVALID_ISO_SPEED = -23,
    DC1394_INVALID_IIDC_VERSION = -24,
    DC1394_INVALID_COLOR_CODING = -25,
    DC1394_INVALID_COLOR_FILTER = -26,
    DC1394_INVALID_CAPTURE_POLICY = -27,
    DC1394_INVALID_ERROR_CODE = -28,
    DC1394_INVALID_BAYER_METHOD = -29,
    DC1394_INVALID_VIDEO1394_DEVICE = -30,
    DC1394_INVALID_OPERATION_MODE = -31,
    DC1394_INVALID_TRIGGER_POLARITY = -32,
    DC1394_INVALID_FEATURE_MODE = -33,
    DC1394_INVALID_LOG_TYPE = -34,
    DC1394_INVALID_BYTE_ORDER = -35,
    DC1394_INVALID_STEREO_METHOD = -36,
    DC1394_BASLER_NO_MORE_SFF_CHUNKS = -37,
    DC1394_BASLER_CORRUPTED_SFF_CHUNK = -38,
    DC1394_BASLER_UNKNOWN_SFF_CHUNK = -39,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394log_t {
    DC1394_LOG_ERROR = 768,
    DC1394_LOG_WARNING = 769,
    DC1394_LOG_DEBUG = 770,
}
pub type size_t = usize;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_char;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
impl ::std::default::Default for __fsid_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __qaddr_t = *mut __quad_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type FILE = _IO_FILE;
pub type __FILE = _IO_FILE;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __mbstate_t {
    pub __count: ::std::os::raw::c_int,
    pub __value: Union_Unnamed1,
}
impl ::std::default::Default for __mbstate_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Union_Unnamed1 {
    pub _bindgen_data_: [u32; 1usize],
}
impl Union_Unnamed1 {
    pub unsafe fn __wch(&mut self) -> *mut ::std::os::raw::c_uint {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __wchb(&mut self) -> *mut [::std::os::raw::c_char; 4usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::default::Default for Union_Unnamed1 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _G_fpos_t {
    pub __pos: __off_t,
    pub __state: __mbstate_t,
}
impl ::std::default::Default for _G_fpos_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _G_fpos64_t {
    pub __pos: __off64_t,
    pub __state: __mbstate_t,
}
impl ::std::default::Default for _G_fpos64_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type va_list = __gnuc_va_list;
pub type __gnuc_va_list = __builtin_va_list;
pub enum _IO_jump_t { }
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _IO_marker {
    pub _next: *mut _IO_marker,
    pub _sbuf: *mut _IO_FILE,
    pub _pos: ::std::os::raw::c_int,
}
impl ::std::default::Default for _IO_marker {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum __codecvt_result {
    __codecvt_ok = 0,
    __codecvt_partial = 1,
    __codecvt_error = 2,
    __codecvt_noconv = 3,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_char,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub __pad1: *mut ::std::os::raw::c_void,
    pub __pad2: *mut ::std::os::raw::c_void,
    pub __pad3: *mut ::std::os::raw::c_void,
    pub __pad4: *mut ::std::os::raw::c_void,
    pub __pad5: size_t,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
impl ::std::default::Default for _IO_FILE {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub enum _IO_FILE_plus { }
pub type __io_read_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void,
                                               __buf:
                                                   *mut ::std::os::raw::c_char,
                                               __nbytes: size_t)
                              -> __ssize_t>;
pub type __io_write_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void,
                                               __buf:
                                                   *const ::std::os::raw::c_char,
                                               __n: size_t) -> __ssize_t>;
pub type __io_seek_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void,
                                               __pos: *mut __off64_t,
                                               __w: ::std::os::raw::c_int)
                              -> ::std::os::raw::c_int>;
pub type __io_close_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void)
                              -> ::std::os::raw::c_int>;
pub type off_t = __off_t;
pub type ssize_t = isize;
pub type fpos_t = _G_fpos_t;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394iidc_version_t {
    DC1394_IIDC_VERSION_1_04 = 544,
    DC1394_IIDC_VERSION_1_20 = 545,
    DC1394_IIDC_VERSION_PTGREY = 546,
    DC1394_IIDC_VERSION_1_30 = 547,
    DC1394_IIDC_VERSION_1_31 = 548,
    DC1394_IIDC_VERSION_1_32 = 549,
    DC1394_IIDC_VERSION_1_33 = 550,
    DC1394_IIDC_VERSION_1_34 = 551,
    DC1394_IIDC_VERSION_1_35 = 552,
    DC1394_IIDC_VERSION_1_36 = 553,
    DC1394_IIDC_VERSION_1_37 = 554,
    DC1394_IIDC_VERSION_1_38 = 555,
    DC1394_IIDC_VERSION_1_39 = 556,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394power_class_t {
    DC1394_POWER_CLASS_NONE = 608,
    DC1394_POWER_CLASS_PROV_MIN_15W = 609,
    DC1394_POWER_CLASS_PROV_MIN_30W = 610,
    DC1394_POWER_CLASS_PROV_MIN_45W = 611,
    DC1394_POWER_CLASS_USES_MAX_1W = 612,
    DC1394_POWER_CLASS_USES_MAX_3W = 613,
    DC1394_POWER_CLASS_USES_MAX_6W = 614,
    DC1394_POWER_CLASS_USES_MAX_10W = 615,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394phy_delay_t {
    DC1394_PHY_DELAY_MAX_144_NS = 640,
    DC1394_PHY_DELAY_UNKNOWN_0 = 641,
    DC1394_PHY_DELAY_UNKNOWN_1 = 642,
    DC1394_PHY_DELAY_UNKNOWN_2 = 643,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dc1394_camera {
    pub guid: uint64_t,
    pub unit: ::std::os::raw::c_int,
    pub unit_spec_ID: uint32_t,
    pub unit_sw_version: uint32_t,
    pub unit_sub_sw_version: uint32_t,
    pub command_registers_base: uint32_t,
    pub unit_directory: uint32_t,
    pub unit_dependent_directory: uint32_t,
    pub advanced_features_csr: uint64_t,
    pub PIO_control_csr: uint64_t,
    pub SIO_control_csr: uint64_t,
    pub strobe_control_csr: uint64_t,
    pub format7_csr: [uint64_t; 8usize],
    pub iidc_version: dc1394iidc_version_t,
    pub vendor: *mut ::std::os::raw::c_char,
    pub model: *mut ::std::os::raw::c_char,
    pub vendor_id: uint32_t,
    pub model_id: uint32_t,
    pub bmode_capable: dc1394bool_t,
    pub one_shot_capable: dc1394bool_t,
    pub multi_shot_capable: dc1394bool_t,
    pub can_switch_on_off: dc1394bool_t,
    pub has_vmode_error_status: dc1394bool_t,
    pub has_feature_error_status: dc1394bool_t,
    pub max_mem_channel: ::std::os::raw::c_int,
    pub flags: uint32_t,
}
impl ::std::default::Default for __dc1394_camera {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type dc1394camera_t = __dc1394_camera;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct dc1394camera_id_t {
    pub unit: uint16_t,
    pub guid: uint64_t,
}
impl ::std::default::Default for dc1394camera_id_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dc1394camera_list_t {
    pub num: uint32_t,
    pub ids: *mut dc1394camera_id_t,
}
impl ::std::default::Default for __dc1394camera_list_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type dc1394camera_list_t = __dc1394camera_list_t;
pub enum __dc1394_t { }
pub type dc1394_t = __dc1394_t;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394trigger_mode_t {
    DC1394_TRIGGER_MODE_0 = 384,
    DC1394_TRIGGER_MODE_1 = 385,
    DC1394_TRIGGER_MODE_2 = 386,
    DC1394_TRIGGER_MODE_3 = 387,
    DC1394_TRIGGER_MODE_4 = 388,
    DC1394_TRIGGER_MODE_5 = 389,
    DC1394_TRIGGER_MODE_14 = 390,
    DC1394_TRIGGER_MODE_15 = 391,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394feature_t {
    DC1394_FEATURE_BRIGHTNESS = 416,
    DC1394_FEATURE_EXPOSURE = 417,
    DC1394_FEATURE_SHARPNESS = 418,
    DC1394_FEATURE_WHITE_BALANCE = 419,
    DC1394_FEATURE_HUE = 420,
    DC1394_FEATURE_SATURATION = 421,
    DC1394_FEATURE_GAMMA = 422,
    DC1394_FEATURE_SHUTTER = 423,
    DC1394_FEATURE_GAIN = 424,
    DC1394_FEATURE_IRIS = 425,
    DC1394_FEATURE_FOCUS = 426,
    DC1394_FEATURE_TEMPERATURE = 427,
    DC1394_FEATURE_TRIGGER = 428,
    DC1394_FEATURE_TRIGGER_DELAY = 429,
    DC1394_FEATURE_WHITE_SHADING = 430,
    DC1394_FEATURE_FRAME_RATE = 431,
    DC1394_FEATURE_ZOOM = 432,
    DC1394_FEATURE_PAN = 433,
    DC1394_FEATURE_TILT = 434,
    DC1394_FEATURE_OPTICAL_FILTER = 435,
    DC1394_FEATURE_CAPTURE_SIZE = 436,
    DC1394_FEATURE_CAPTURE_QUALITY = 437,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394trigger_source_t {
    DC1394_TRIGGER_SOURCE_0 = 576,
    DC1394_TRIGGER_SOURCE_1 = 577,
    DC1394_TRIGGER_SOURCE_2 = 578,
    DC1394_TRIGGER_SOURCE_3 = 579,
    DC1394_TRIGGER_SOURCE_SOFTWARE = 580,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394trigger_polarity_t {
    DC1394_TRIGGER_ACTIVE_LOW = 704,
    DC1394_TRIGGER_ACTIVE_HIGH = 705,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394feature_mode_t {
    DC1394_FEATURE_MODE_MANUAL = 736,
    DC1394_FEATURE_MODE_AUTO = 737,
    DC1394_FEATURE_MODE_ONE_PUSH_AUTO = 738,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct dc1394feature_modes_t {
    pub num: uint32_t,
    pub modes: [dc1394feature_mode_t; 3usize],
}
impl ::std::default::Default for dc1394feature_modes_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct dc1394trigger_modes_t {
    pub num: uint32_t,
    pub modes: [dc1394trigger_mode_t; 8usize],
}
impl ::std::default::Default for dc1394trigger_modes_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct dc1394trigger_sources_t {
    pub num: uint32_t,
    pub sources: [dc1394trigger_source_t; 5usize],
}
impl ::std::default::Default for dc1394trigger_sources_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dc1394feature_info_t_struct {
    pub id: dc1394feature_t,
    pub available: dc1394bool_t,
    pub absolute_capable: dc1394bool_t,
    pub readout_capable: dc1394bool_t,
    pub on_off_capable: dc1394bool_t,
    pub polarity_capable: dc1394bool_t,
    pub is_on: dc1394switch_t,
    pub current_mode: dc1394feature_mode_t,
    pub modes: dc1394feature_modes_t,
    pub trigger_modes: dc1394trigger_modes_t,
    pub trigger_mode: dc1394trigger_mode_t,
    pub trigger_polarity: dc1394trigger_polarity_t,
    pub trigger_sources: dc1394trigger_sources_t,
    pub trigger_source: dc1394trigger_source_t,
    pub min: uint32_t,
    pub max: uint32_t,
    pub value: uint32_t,
    pub BU_value: uint32_t,
    pub RV_value: uint32_t,
    pub B_value: uint32_t,
    pub R_value: uint32_t,
    pub G_value: uint32_t,
    pub target_value: uint32_t,
    pub abs_control: dc1394switch_t,
    pub abs_value: f32,
    pub abs_max: f32,
    pub abs_min: f32,
}
impl ::std::default::Default for __dc1394feature_info_t_struct {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type dc1394feature_info_t = __dc1394feature_info_t_struct;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dc1394featureset_t {
    pub feature: [dc1394feature_info_t; 22usize],
}
impl ::std::default::Default for __dc1394featureset_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type dc1394featureset_t = __dc1394featureset_t;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394speed_t {
    DC1394_ISO_SPEED_100 = 0,
    DC1394_ISO_SPEED_200 = 1,
    DC1394_ISO_SPEED_400 = 2,
    DC1394_ISO_SPEED_800 = 3,
    DC1394_ISO_SPEED_1600 = 4,
    DC1394_ISO_SPEED_3200 = 5,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394framerate_t {
    DC1394_FRAMERATE_1_875 = 32,
    DC1394_FRAMERATE_3_75 = 33,
    DC1394_FRAMERATE_7_5 = 34,
    DC1394_FRAMERATE_15 = 35,
    DC1394_FRAMERATE_30 = 36,
    DC1394_FRAMERATE_60 = 37,
    DC1394_FRAMERATE_120 = 38,
    DC1394_FRAMERATE_240 = 39,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394operation_mode_t {
    DC1394_OPERATION_MODE_LEGACY = 480,
    DC1394_OPERATION_MODE_1394B = 481,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct dc1394framerates_t {
    pub num: uint32_t,
    pub framerates: [dc1394framerate_t; 8usize],
}
impl ::std::default::Default for dc1394framerates_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dc1394_video_frame {
    pub image: *mut ::std::os::raw::c_uchar,
    pub size: [uint32_t; 2usize],
    pub position: [uint32_t; 2usize],
    pub color_coding: dc1394color_coding_t,
    pub color_filter: dc1394color_filter_t,
    pub yuv_byte_order: uint32_t,
    pub data_depth: uint32_t,
    pub stride: uint32_t,
    pub video_mode: dc1394video_mode_t,
    pub total_bytes: uint64_t,
    pub image_bytes: uint32_t,
    pub padding_bytes: uint32_t,
    pub packet_size: uint32_t,
    pub packets_per_frame: uint32_t,
    pub timestamp: uint64_t,
    pub frames_behind: uint32_t,
    pub camera: *mut dc1394camera_t,
    pub id: uint32_t,
    pub allocated_image_bytes: uint64_t,
    pub little_endian: dc1394bool_t,
    pub data_in_padding: dc1394bool_t,
}
impl ::std::default::Default for __dc1394_video_frame {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type dc1394video_frame_t = __dc1394_video_frame;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394capture_policy_t {
    DC1394_CAPTURE_POLICY_WAIT = 672,
    DC1394_CAPTURE_POLICY_POLL = 673,
}
pub type dc1394capture_callback_t =
    ::std::option::Option<unsafe extern "C" fn(arg1: *mut dc1394camera_t,
                                               arg2:
                                                   *mut ::std::os::raw::c_void)>;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394bayer_method_t {
    DC1394_BAYER_METHOD_NEAREST = 0,
    DC1394_BAYER_METHOD_SIMPLE = 1,
    DC1394_BAYER_METHOD_BILINEAR = 2,
    DC1394_BAYER_METHOD_HQLINEAR = 3,
    DC1394_BAYER_METHOD_DOWNSAMPLE = 4,
    DC1394_BAYER_METHOD_EDGESENSE = 5,
    DC1394_BAYER_METHOD_VNG = 6,
    DC1394_BAYER_METHOD_AHD = 7,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum dc1394stereo_method_t {
    DC1394_STEREO_METHOD_INTERLACED = 0,
    DC1394_STEREO_METHOD_FIELD = 1,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dc1394format7mode_t {
    pub present: dc1394bool_t,
    pub size_x: uint32_t,
    pub size_y: uint32_t,
    pub max_size_x: uint32_t,
    pub max_size_y: uint32_t,
    pub pos_x: uint32_t,
    pub pos_y: uint32_t,
    pub unit_size_x: uint32_t,
    pub unit_size_y: uint32_t,
    pub unit_pos_x: uint32_t,
    pub unit_pos_y: uint32_t,
    pub color_codings: dc1394color_codings_t,
    pub color_coding: dc1394color_coding_t,
    pub pixnum: uint32_t,
    pub packet_size: uint32_t,
    pub unit_packet_size: uint32_t,
    pub max_packet_size: uint32_t,
    pub total_bytes: uint64_t,
    pub color_filter: dc1394color_filter_t,
}
impl ::std::default::Default for __dc1394format7mode_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type dc1394format7mode_t = __dc1394format7mode_t;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dc1394format7modeset_t {
    pub mode: [dc1394format7mode_t; 8usize],
}
impl ::std::default::Default for __dc1394format7modeset_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type dc1394format7modeset_t = __dc1394format7modeset_t;
extern "C" {
    pub static mut _IO_2_1_stdin_: _IO_FILE_plus;
    pub static mut _IO_2_1_stdout_: _IO_FILE_plus;
    pub static mut _IO_2_1_stderr_: _IO_FILE_plus;
    pub static mut stdin: *mut _IO_FILE;
    pub static mut stdout: *mut _IO_FILE;
    pub static mut stderr: *mut _IO_FILE;
    pub static mut sys_nerr: ::std::os::raw::c_int;
    pub static mut sys_errlist: [*const ::std::os::raw::c_char; 0usize];
}
extern "C" {
    pub fn dc1394_log_register_handler(type_: dc1394log_t,
                                       log_handler:
                                           ::std::option::Option<unsafe extern "C" fn(type_:
                                                                                          dc1394log_t,
                                                                                      message:
                                                                                          *const ::std::os::raw::c_char,
                                                                                      user:
                                                                                          *mut ::std::os::raw::c_void)>,
                                       user: *mut ::std::os::raw::c_void)
     -> dc1394error_t;
    pub fn dc1394_log_set_default_handler(type_: dc1394log_t)
     -> dc1394error_t;
    pub fn dc1394_log_error(format: *const ::std::os::raw::c_char, ...);
    pub fn dc1394_log_warning(format: *const ::std::os::raw::c_char, ...);
    pub fn dc1394_log_debug(format: *const ::std::os::raw::c_char, ...);
    pub fn __underflow(arg1: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn __uflow(arg1: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn __overflow(arg1: *mut _IO_FILE, arg2: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn _IO_getc(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_putc(__c: ::std::os::raw::c_int, __fp: *mut _IO_FILE)
     -> ::std::os::raw::c_int;
    pub fn _IO_feof(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_ferror(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_peekc_locked(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_flockfile(arg1: *mut _IO_FILE);
    pub fn _IO_funlockfile(arg1: *mut _IO_FILE);
    pub fn _IO_ftrylockfile(arg1: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_vfscanf(arg1: *mut _IO_FILE,
                       arg2: *const ::std::os::raw::c_char,
                       arg3: __gnuc_va_list, arg4: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn _IO_vfprintf(arg1: *mut _IO_FILE,
                        arg2: *const ::std::os::raw::c_char,
                        arg3: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn _IO_padn(arg1: *mut _IO_FILE, arg2: ::std::os::raw::c_int,
                    arg3: __ssize_t) -> __ssize_t;
    pub fn _IO_sgetn(arg1: *mut _IO_FILE, arg2: *mut ::std::os::raw::c_void,
                     arg3: size_t) -> size_t;
    pub fn _IO_seekoff(arg1: *mut _IO_FILE, arg2: __off64_t,
                       arg3: ::std::os::raw::c_int,
                       arg4: ::std::os::raw::c_int) -> __off64_t;
    pub fn _IO_seekpos(arg1: *mut _IO_FILE, arg2: __off64_t,
                       arg3: ::std::os::raw::c_int) -> __off64_t;
    pub fn _IO_free_backup_area(arg1: *mut _IO_FILE);
    pub fn remove(__filename: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn rename(__old: *const ::std::os::raw::c_char,
                  __new: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn renameat(__oldfd: ::std::os::raw::c_int,
                    __old: *const ::std::os::raw::c_char,
                    __newfd: ::std::os::raw::c_int,
                    __new: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn tmpfile() -> *mut FILE;
    pub fn tmpnam(__s: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn tmpnam_r(__s: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn tempnam(__dir: *const ::std::os::raw::c_char,
                   __pfx: *const ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn fclose(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fflush(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fflush_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fopen(__filename: *const ::std::os::raw::c_char,
                 __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn freopen(__filename: *const ::std::os::raw::c_char,
                   __modes: *const ::std::os::raw::c_char,
                   __stream: *mut FILE) -> *mut FILE;
    pub fn fdopen(__fd: ::std::os::raw::c_int,
                  __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn fmemopen(__s: *mut ::std::os::raw::c_void, __len: size_t,
                    __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn open_memstream(__bufloc: *mut *mut ::std::os::raw::c_char,
                          __sizeloc: *mut size_t) -> *mut FILE;
    pub fn setbuf(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char);
    pub fn setvbuf(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char,
                   __modes: ::std::os::raw::c_int, __n: size_t)
     -> ::std::os::raw::c_int;
    pub fn setbuffer(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char,
                     __size: size_t);
    pub fn setlinebuf(__stream: *mut FILE);
    pub fn fprintf(__stream: *mut FILE,
                   __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn printf(__format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn sprintf(__s: *mut ::std::os::raw::c_char,
                   __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn vfprintf(__s: *mut FILE, __format: *const ::std::os::raw::c_char,
                    __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vprintf(__format: *const ::std::os::raw::c_char,
                   __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vsprintf(__s: *mut ::std::os::raw::c_char,
                    __format: *const ::std::os::raw::c_char,
                    __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn snprintf(__s: *mut ::std::os::raw::c_char, __maxlen: size_t,
                    __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn vsnprintf(__s: *mut ::std::os::raw::c_char, __maxlen: size_t,
                     __format: *const ::std::os::raw::c_char,
                     __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vdprintf(__fd: ::std::os::raw::c_int,
                    __fmt: *const ::std::os::raw::c_char,
                    __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn dprintf(__fd: ::std::os::raw::c_int,
                   __fmt: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn fscanf(__stream: *mut FILE,
                  __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn scanf(__format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn sscanf(__s: *const ::std::os::raw::c_char,
                  __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn vfscanf(__s: *mut FILE, __format: *const ::std::os::raw::c_char,
                   __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vscanf(__format: *const ::std::os::raw::c_char,
                  __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vsscanf(__s: *const ::std::os::raw::c_char,
                   __format: *const ::std::os::raw::c_char,
                   __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn fgetc(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn getc(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn getchar() -> ::std::os::raw::c_int;
    pub fn getc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn getchar_unlocked() -> ::std::os::raw::c_int;
    pub fn fgetc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fputc(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putc(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putchar(__c: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn fputc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putchar_unlocked(__c: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn getw(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn putw(__w: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn fgets(__s: *mut ::std::os::raw::c_char, __n: ::std::os::raw::c_int,
                 __stream: *mut FILE) -> *mut ::std::os::raw::c_char;
    pub fn __getdelim(__lineptr: *mut *mut ::std::os::raw::c_char,
                      __n: *mut size_t, __delimiter: ::std::os::raw::c_int,
                      __stream: *mut FILE) -> __ssize_t;
    pub fn getdelim(__lineptr: *mut *mut ::std::os::raw::c_char,
                    __n: *mut size_t, __delimiter: ::std::os::raw::c_int,
                    __stream: *mut FILE) -> __ssize_t;
    pub fn getline(__lineptr: *mut *mut ::std::os::raw::c_char,
                   __n: *mut size_t, __stream: *mut FILE) -> __ssize_t;
    pub fn fputs(__s: *const ::std::os::raw::c_char, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn puts(__s: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn ungetc(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn fread(__ptr: *mut ::std::os::raw::c_void, __size: size_t,
                 __n: size_t, __stream: *mut FILE) -> size_t;
    pub fn fwrite(__ptr: *const ::std::os::raw::c_void, __size: size_t,
                  __n: size_t, __s: *mut FILE) -> size_t;
    pub fn fread_unlocked(__ptr: *mut ::std::os::raw::c_void, __size: size_t,
                          __n: size_t, __stream: *mut FILE) -> size_t;
    pub fn fwrite_unlocked(__ptr: *const ::std::os::raw::c_void,
                           __size: size_t, __n: size_t, __stream: *mut FILE)
     -> size_t;
    pub fn fseek(__stream: *mut FILE, __off: ::std::os::raw::c_long,
                 __whence: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn ftell(__stream: *mut FILE) -> ::std::os::raw::c_long;
    pub fn rewind(__stream: *mut FILE);
    pub fn fseeko(__stream: *mut FILE, __off: __off_t,
                  __whence: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn ftello(__stream: *mut FILE) -> __off_t;
    pub fn fgetpos(__stream: *mut FILE, __pos: *mut fpos_t)
     -> ::std::os::raw::c_int;
    pub fn fsetpos(__stream: *mut FILE, __pos: *const fpos_t)
     -> ::std::os::raw::c_int;
    pub fn clearerr(__stream: *mut FILE);
    pub fn feof(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn ferror(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn clearerr_unlocked(__stream: *mut FILE);
    pub fn feof_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn ferror_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn perror(__s: *const ::std::os::raw::c_char);
    pub fn fileno(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fileno_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn popen(__command: *const ::std::os::raw::c_char,
                 __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn pclose(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn ctermid(__s: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn flockfile(__stream: *mut FILE);
    pub fn ftrylockfile(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn funlockfile(__stream: *mut FILE);
    pub fn dc1394_new() -> *mut dc1394_t;
    pub fn dc1394_free(dc1394: *mut dc1394_t);
    pub fn dc1394_camera_set_broadcast(camera: *mut dc1394camera_t,
                                       pwr: dc1394bool_t) -> dc1394error_t;
    pub fn dc1394_camera_get_broadcast(camera: *mut dc1394camera_t,
                                       pwr: *mut dc1394bool_t)
     -> dc1394error_t;
    pub fn dc1394_reset_bus(camera: *mut dc1394camera_t) -> dc1394error_t;
    pub fn dc1394_read_cycle_timer(camera: *mut dc1394camera_t,
                                   cycle_timer: *mut uint32_t,
                                   local_time: *mut uint64_t)
     -> dc1394error_t;
    pub fn dc1394_camera_get_node(camera: *mut dc1394camera_t,
                                  node: *mut uint32_t,
                                  generation: *mut uint32_t) -> dc1394error_t;
    pub fn dc1394_camera_enumerate(dc1394: *mut dc1394_t,
                                   list: *mut *mut dc1394camera_list_t)
     -> dc1394error_t;
    pub fn dc1394_camera_free_list(list: *mut dc1394camera_list_t);
    pub fn dc1394_camera_new(dc1394: *mut dc1394_t, guid: uint64_t)
     -> *mut dc1394camera_t;
    pub fn dc1394_camera_new_unit(dc1394: *mut dc1394_t, guid: uint64_t,
                                  unit: ::std::os::raw::c_int)
     -> *mut dc1394camera_t;
    pub fn dc1394_camera_free(camera: *mut dc1394camera_t);
    pub fn dc1394_camera_print_info(camera: *mut dc1394camera_t,
                                    fd: *mut FILE) -> dc1394error_t;
    pub fn dc1394_feature_get_all(camera: *mut dc1394camera_t,
                                  features: *mut dc1394featureset_t)
     -> dc1394error_t;
    pub fn dc1394_feature_get(camera: *mut dc1394camera_t,
                              feature: *mut dc1394feature_info_t)
     -> dc1394error_t;
    pub fn dc1394_feature_print(feature: *mut dc1394feature_info_t,
                                fd: *mut FILE) -> dc1394error_t;
    pub fn dc1394_feature_print_all(features: *mut dc1394featureset_t,
                                    fd: *mut FILE) -> dc1394error_t;
    pub fn dc1394_feature_whitebalance_get_value(camera: *mut dc1394camera_t,
                                                 u_b_value: *mut uint32_t,
                                                 v_r_value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_feature_whitebalance_set_value(camera: *mut dc1394camera_t,
                                                 u_b_value: uint32_t,
                                                 v_r_value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_feature_temperature_get_value(camera: *mut dc1394camera_t,
                                                target_temperature:
                                                    *mut uint32_t,
                                                temperature: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_feature_temperature_set_value(camera: *mut dc1394camera_t,
                                                target_temperature: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_feature_whiteshading_get_value(camera: *mut dc1394camera_t,
                                                 r_value: *mut uint32_t,
                                                 g_value: *mut uint32_t,
                                                 b_value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_feature_whiteshading_set_value(camera: *mut dc1394camera_t,
                                                 r_value: uint32_t,
                                                 g_value: uint32_t,
                                                 b_value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_feature_get_value(camera: *mut dc1394camera_t,
                                    feature: dc1394feature_t,
                                    value: *mut uint32_t) -> dc1394error_t;
    pub fn dc1394_feature_set_value(camera: *mut dc1394camera_t,
                                    feature: dc1394feature_t, value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_feature_is_present(camera: *mut dc1394camera_t,
                                     feature: dc1394feature_t,
                                     value: *mut dc1394bool_t)
     -> dc1394error_t;
    pub fn dc1394_feature_is_readable(camera: *mut dc1394camera_t,
                                      feature: dc1394feature_t,
                                      value: *mut dc1394bool_t)
     -> dc1394error_t;
    pub fn dc1394_feature_get_boundaries(camera: *mut dc1394camera_t,
                                         feature: dc1394feature_t,
                                         min: *mut uint32_t,
                                         max: *mut uint32_t) -> dc1394error_t;
    pub fn dc1394_feature_is_switchable(camera: *mut dc1394camera_t,
                                        feature: dc1394feature_t,
                                        value: *mut dc1394bool_t)
     -> dc1394error_t;
    pub fn dc1394_feature_get_power(camera: *mut dc1394camera_t,
                                    feature: dc1394feature_t,
                                    pwr: *mut dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_feature_set_power(camera: *mut dc1394camera_t,
                                    feature: dc1394feature_t,
                                    pwr: dc1394switch_t) -> dc1394error_t;
    pub fn dc1394_feature_get_modes(camera: *mut dc1394camera_t,
                                    feature: dc1394feature_t,
                                    modes: *mut dc1394feature_modes_t)
     -> dc1394error_t;
    pub fn dc1394_feature_get_mode(camera: *mut dc1394camera_t,
                                   feature: dc1394feature_t,
                                   mode: *mut dc1394feature_mode_t)
     -> dc1394error_t;
    pub fn dc1394_feature_set_mode(camera: *mut dc1394camera_t,
                                   feature: dc1394feature_t,
                                   mode: dc1394feature_mode_t)
     -> dc1394error_t;
    pub fn dc1394_feature_has_absolute_control(camera: *mut dc1394camera_t,
                                               feature: dc1394feature_t,
                                               value: *mut dc1394bool_t)
     -> dc1394error_t;
    pub fn dc1394_feature_get_absolute_boundaries(camera: *mut dc1394camera_t,
                                                  feature: dc1394feature_t,
                                                  min: *mut f32,
                                                  max: *mut f32)
     -> dc1394error_t;
    pub fn dc1394_feature_get_absolute_value(camera: *mut dc1394camera_t,
                                             feature: dc1394feature_t,
                                             value: *mut f32)
     -> dc1394error_t;
    pub fn dc1394_feature_set_absolute_value(camera: *mut dc1394camera_t,
                                             feature: dc1394feature_t,
                                             value: f32) -> dc1394error_t;
    pub fn dc1394_feature_get_absolute_control(camera: *mut dc1394camera_t,
                                               feature: dc1394feature_t,
                                               pwr: *mut dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_feature_set_absolute_control(camera: *mut dc1394camera_t,
                                               feature: dc1394feature_t,
                                               pwr: dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_set_polarity(camera: *mut dc1394camera_t,
                                                polarity:
                                                    dc1394trigger_polarity_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_get_polarity(camera: *mut dc1394camera_t,
                                                polarity:
                                                    *mut dc1394trigger_polarity_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_has_polarity(camera: *mut dc1394camera_t,
                                                polarity_capable:
                                                    *mut dc1394bool_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_set_power(camera: *mut dc1394camera_t,
                                             pwr: dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_get_power(camera: *mut dc1394camera_t,
                                             pwr: *mut dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_set_mode(camera: *mut dc1394camera_t,
                                            mode: dc1394trigger_mode_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_get_mode(camera: *mut dc1394camera_t,
                                            mode: *mut dc1394trigger_mode_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_set_source(camera: *mut dc1394camera_t,
                                              source: dc1394trigger_source_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_get_source(camera: *mut dc1394camera_t,
                                              source:
                                                  *mut dc1394trigger_source_t)
     -> dc1394error_t;
    pub fn dc1394_external_trigger_get_supported_sources(camera:
                                                             *mut dc1394camera_t,
                                                         sources:
                                                             *mut dc1394trigger_sources_t)
     -> dc1394error_t;
    pub fn dc1394_software_trigger_set_power(camera: *mut dc1394camera_t,
                                             pwr: dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_software_trigger_get_power(camera: *mut dc1394camera_t,
                                             pwr: *mut dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_pio_set(camera: *mut dc1394camera_t, value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_pio_get(camera: *mut dc1394camera_t, value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_camera_reset(camera: *mut dc1394camera_t) -> dc1394error_t;
    pub fn dc1394_camera_set_power(camera: *mut dc1394camera_t,
                                   pwr: dc1394switch_t) -> dc1394error_t;
    pub fn dc1394_memory_busy(camera: *mut dc1394camera_t,
                              value: *mut dc1394bool_t) -> dc1394error_t;
    pub fn dc1394_memory_save(camera: *mut dc1394camera_t, channel: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_memory_load(camera: *mut dc1394camera_t, channel: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_supported_modes(camera: *mut dc1394camera_t,
                                            video_modes:
                                                *mut dc1394video_modes_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_supported_framerates(camera: *mut dc1394camera_t,
                                                 video_mode:
                                                     dc1394video_mode_t,
                                                 framerates:
                                                     *mut dc1394framerates_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_framerate(camera: *mut dc1394camera_t,
                                      framerate: *mut dc1394framerate_t)
     -> dc1394error_t;
    pub fn dc1394_video_set_framerate(camera: *mut dc1394camera_t,
                                      framerate: dc1394framerate_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_mode(camera: *mut dc1394camera_t,
                                 video_mode: *mut dc1394video_mode_t)
     -> dc1394error_t;
    pub fn dc1394_video_set_mode(camera: *mut dc1394camera_t,
                                 video_mode: dc1394video_mode_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_operation_mode(camera: *mut dc1394camera_t,
                                           mode: *mut dc1394operation_mode_t)
     -> dc1394error_t;
    pub fn dc1394_video_set_operation_mode(camera: *mut dc1394camera_t,
                                           mode: dc1394operation_mode_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_iso_speed(camera: *mut dc1394camera_t,
                                      speed: *mut dc1394speed_t)
     -> dc1394error_t;
    pub fn dc1394_video_set_iso_speed(camera: *mut dc1394camera_t,
                                      speed: dc1394speed_t) -> dc1394error_t;
    pub fn dc1394_video_get_iso_channel(camera: *mut dc1394camera_t,
                                        channel: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_video_set_iso_channel(camera: *mut dc1394camera_t,
                                        channel: uint32_t) -> dc1394error_t;
    pub fn dc1394_video_get_data_depth(camera: *mut dc1394camera_t,
                                       depth: *mut uint32_t) -> dc1394error_t;
    pub fn dc1394_video_set_transmission(camera: *mut dc1394camera_t,
                                         pwr: dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_transmission(camera: *mut dc1394camera_t,
                                         pwr: *mut dc1394switch_t)
     -> dc1394error_t;
    pub fn dc1394_video_set_one_shot(camera: *mut dc1394camera_t,
                                     pwr: dc1394switch_t) -> dc1394error_t;
    pub fn dc1394_video_get_one_shot(camera: *mut dc1394camera_t,
                                     is_on: *mut dc1394bool_t)
     -> dc1394error_t;
    pub fn dc1394_video_set_multi_shot(camera: *mut dc1394camera_t,
                                       numFrames: uint32_t,
                                       pwr: dc1394switch_t) -> dc1394error_t;
    pub fn dc1394_video_get_multi_shot(camera: *mut dc1394camera_t,
                                       is_on: *mut dc1394bool_t,
                                       numFrames: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_video_get_bandwidth_usage(camera: *mut dc1394camera_t,
                                            bandwidth: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_capture_setup(camera: *mut dc1394camera_t,
                                num_dma_buffers: uint32_t, flags: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_capture_stop(camera: *mut dc1394camera_t) -> dc1394error_t;
    pub fn dc1394_capture_get_fileno(camera: *mut dc1394camera_t)
     -> ::std::os::raw::c_int;
    pub fn dc1394_capture_dequeue(camera: *mut dc1394camera_t,
                                  policy: dc1394capture_policy_t,
                                  frame: *mut *mut dc1394video_frame_t)
     -> dc1394error_t;
    pub fn dc1394_capture_enqueue(camera: *mut dc1394camera_t,
                                  frame: *mut dc1394video_frame_t)
     -> dc1394error_t;
    pub fn dc1394_capture_is_frame_corrupt(camera: *mut dc1394camera_t,
                                           frame: *mut dc1394video_frame_t)
     -> dc1394bool_t;
    pub fn dc1394_capture_set_callback(camera: *mut dc1394camera_t,
                                       callback: dc1394capture_callback_t,
                                       user_data:
                                           *mut ::std::os::raw::c_void);
    pub fn dc1394_convert_to_YUV422(src: *mut uint8_t, dest: *mut uint8_t,
                                    width: uint32_t, height: uint32_t,
                                    byte_order: uint32_t,
                                    source_coding: dc1394color_coding_t,
                                    bits: uint32_t) -> dc1394error_t;
    pub fn dc1394_convert_to_MONO8(src: *mut uint8_t, dest: *mut uint8_t,
                                   width: uint32_t, height: uint32_t,
                                   byte_order: uint32_t,
                                   source_coding: dc1394color_coding_t,
                                   bits: uint32_t) -> dc1394error_t;
    pub fn dc1394_convert_to_RGB8(src: *mut uint8_t, dest: *mut uint8_t,
                                  width: uint32_t, height: uint32_t,
                                  byte_order: uint32_t,
                                  source_coding: dc1394color_coding_t,
                                  bits: uint32_t) -> dc1394error_t;
    pub fn dc1394_deinterlace_stereo(src: *mut uint8_t, dest: *mut uint8_t,
                                     width: uint32_t, height: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_bayer_decoding_8bit(bayer: *const uint8_t,
                                      rgb: *mut uint8_t, width: uint32_t,
                                      height: uint32_t,
                                      tile: dc1394color_filter_t,
                                      method: dc1394bayer_method_t)
     -> dc1394error_t;
    pub fn dc1394_bayer_decoding_16bit(bayer: *const uint16_t,
                                       rgb: *mut uint16_t, width: uint32_t,
                                       height: uint32_t,
                                       tile: dc1394color_filter_t,
                                       method: dc1394bayer_method_t,
                                       bits: uint32_t) -> dc1394error_t;
    pub fn dc1394_convert_frames(in_: *mut dc1394video_frame_t,
                                 out: *mut dc1394video_frame_t)
     -> dc1394error_t;
    pub fn dc1394_debayer_frames(in_: *mut dc1394video_frame_t,
                                 out: *mut dc1394video_frame_t,
                                 method: dc1394bayer_method_t)
     -> dc1394error_t;
    pub fn dc1394_deinterlace_stereo_frames(in_: *mut dc1394video_frame_t,
                                            out: *mut dc1394video_frame_t,
                                            method: dc1394stereo_method_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_max_image_size(camera: *mut dc1394camera_t,
                                             video_mode: dc1394video_mode_t,
                                             h_size: *mut uint32_t,
                                             v_size: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_unit_size(camera: *mut dc1394camera_t,
                                        video_mode: dc1394video_mode_t,
                                        h_unit: *mut uint32_t,
                                        v_unit: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_image_size(camera: *mut dc1394camera_t,
                                         video_mode: dc1394video_mode_t,
                                         width: *mut uint32_t,
                                         height: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_set_image_size(camera: *mut dc1394camera_t,
                                         video_mode: dc1394video_mode_t,
                                         width: uint32_t, height: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_image_position(camera: *mut dc1394camera_t,
                                             video_mode: dc1394video_mode_t,
                                             left: *mut uint32_t,
                                             top: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_set_image_position(camera: *mut dc1394camera_t,
                                             video_mode: dc1394video_mode_t,
                                             left: uint32_t, top: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_unit_position(camera: *mut dc1394camera_t,
                                            video_mode: dc1394video_mode_t,
                                            h_unit_pos: *mut uint32_t,
                                            v_unit_pos: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_color_coding(camera: *mut dc1394camera_t,
                                           video_mode: dc1394video_mode_t,
                                           color_coding:
                                               *mut dc1394color_coding_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_color_codings(camera: *mut dc1394camera_t,
                                            video_mode: dc1394video_mode_t,
                                            codings:
                                                *mut dc1394color_codings_t)
     -> dc1394error_t;
    pub fn dc1394_format7_set_color_coding(camera: *mut dc1394camera_t,
                                           video_mode: dc1394video_mode_t,
                                           color_coding: dc1394color_coding_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_color_filter(camera: *mut dc1394camera_t,
                                           video_mode: dc1394video_mode_t,
                                           color_filter:
                                               *mut dc1394color_filter_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_packet_parameters(camera: *mut dc1394camera_t,
                                                video_mode:
                                                    dc1394video_mode_t,
                                                unit_bytes: *mut uint32_t,
                                                max_bytes: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_packet_size(camera: *mut dc1394camera_t,
                                          video_mode: dc1394video_mode_t,
                                          packet_size: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_set_packet_size(camera: *mut dc1394camera_t,
                                          video_mode: dc1394video_mode_t,
                                          packet_size: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_recommended_packet_size(camera:
                                                          *mut dc1394camera_t,
                                                      video_mode:
                                                          dc1394video_mode_t,
                                                      packet_size:
                                                          *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_packets_per_frame(camera: *mut dc1394camera_t,
                                                video_mode:
                                                    dc1394video_mode_t,
                                                ppf: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_data_depth(camera: *mut dc1394camera_t,
                                         video_mode: dc1394video_mode_t,
                                         data_depth: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_frame_interval(camera: *mut dc1394camera_t,
                                             video_mode: dc1394video_mode_t,
                                             interval: *mut f32)
     -> dc1394error_t;
    pub fn dc1394_format7_get_pixel_number(camera: *mut dc1394camera_t,
                                           video_mode: dc1394video_mode_t,
                                           pixnum: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_total_bytes(camera: *mut dc1394camera_t,
                                          video_mode: dc1394video_mode_t,
                                          total_bytes: *mut uint64_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_modeset(camera: *mut dc1394camera_t,
                                      info: *mut dc1394format7modeset_t)
     -> dc1394error_t;
    pub fn dc1394_format7_get_mode_info(camera: *mut dc1394camera_t,
                                        video_mode: dc1394video_mode_t,
                                        f7_mode: *mut dc1394format7mode_t)
     -> dc1394error_t;
    pub fn dc1394_format7_set_roi(camera: *mut dc1394camera_t,
                                  video_mode: dc1394video_mode_t,
                                  color_coding: dc1394color_coding_t,
                                  packet_size: int32_t, left: int32_t,
                                  top: int32_t, width: int32_t,
                                  height: int32_t) -> dc1394error_t;
    pub fn dc1394_format7_get_roi(camera: *mut dc1394camera_t,
                                  video_mode: dc1394video_mode_t,
                                  color_coding: *mut dc1394color_coding_t,
                                  packet_size: *mut uint32_t,
                                  left: *mut uint32_t, top: *mut uint32_t,
                                  width: *mut uint32_t, height: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_iso_set_persist(camera: *mut dc1394camera_t)
     -> dc1394error_t;
    pub fn dc1394_iso_allocate_channel(camera: *mut dc1394camera_t,
                                       channels_allowed: uint64_t,
                                       channel: *mut ::std::os::raw::c_int)
     -> dc1394error_t;
    pub fn dc1394_iso_release_channel(camera: *mut dc1394camera_t,
                                      channel: ::std::os::raw::c_int)
     -> dc1394error_t;
    pub fn dc1394_iso_allocate_bandwidth(camera: *mut dc1394camera_t,
                                         bandwidth_units:
                                             ::std::os::raw::c_int)
     -> dc1394error_t;
    pub fn dc1394_iso_release_bandwidth(camera: *mut dc1394camera_t,
                                        bandwidth_units:
                                            ::std::os::raw::c_int)
     -> dc1394error_t;
    pub fn dc1394_iso_release_all(camera: *mut dc1394camera_t)
     -> dc1394error_t;
    pub fn dc1394_get_registers(camera: *mut dc1394camera_t, offset: uint64_t,
                                value: *mut uint32_t, num_regs: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_set_registers(camera: *mut dc1394camera_t, offset: uint64_t,
                                value: *const uint32_t, num_regs: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_control_registers(camera: *mut dc1394camera_t,
                                        offset: uint64_t,
                                        value: *mut uint32_t,
                                        num_regs: uint32_t) -> dc1394error_t;
    pub fn dc1394_set_control_registers(camera: *mut dc1394camera_t,
                                        offset: uint64_t,
                                        value: *const uint32_t,
                                        num_regs: uint32_t) -> dc1394error_t;
    pub fn dc1394_get_adv_control_registers(camera: *mut dc1394camera_t,
                                            offset: uint64_t,
                                            value: *mut uint32_t,
                                            num_regs: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_set_adv_control_registers(camera: *mut dc1394camera_t,
                                            offset: uint64_t,
                                            value: *const uint32_t,
                                            num_regs: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_format7_register(camera: *mut dc1394camera_t,
                                       mode: ::std::os::raw::c_uint,
                                       offset: uint64_t, value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_set_format7_register(camera: *mut dc1394camera_t,
                                       mode: ::std::os::raw::c_uint,
                                       offset: uint64_t, value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_absolute_register(camera: *mut dc1394camera_t,
                                        feature: ::std::os::raw::c_uint,
                                        offset: uint64_t,
                                        value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_set_absolute_register(camera: *mut dc1394camera_t,
                                        feature: ::std::os::raw::c_uint,
                                        offset: uint64_t, value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_PIO_register(camera: *mut dc1394camera_t,
                                   offset: uint64_t, value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_set_PIO_register(camera: *mut dc1394camera_t,
                                   offset: uint64_t, value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_SIO_register(camera: *mut dc1394camera_t,
                                   offset: uint64_t, value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_set_SIO_register(camera: *mut dc1394camera_t,
                                   offset: uint64_t, value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_strobe_register(camera: *mut dc1394camera_t,
                                      offset: uint64_t, value: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_set_strobe_register(camera: *mut dc1394camera_t,
                                      offset: uint64_t, value: uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_image_size_from_video_mode(camera: *mut dc1394camera_t,
                                                 video_mode:
                                                     dc1394video_mode_t,
                                                 width: *mut uint32_t,
                                                 height: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_framerate_as_float(framerate_enum: dc1394framerate_t,
                                     framerate: *mut f32) -> dc1394error_t;
    pub fn dc1394_get_color_coding_data_depth(color_coding:
                                                  dc1394color_coding_t,
                                              bits: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_color_coding_bit_size(color_coding:
                                                dc1394color_coding_t,
                                            bits: *mut uint32_t)
     -> dc1394error_t;
    pub fn dc1394_get_color_coding_from_video_mode(camera:
                                                       *mut dc1394camera_t,
                                                   video_mode:
                                                       dc1394video_mode_t,
                                                   color_coding:
                                                       *mut dc1394color_coding_t)
     -> dc1394error_t;
    pub fn dc1394_is_color(color_mode: dc1394color_coding_t,
                           is_color: *mut dc1394bool_t) -> dc1394error_t;
    pub fn dc1394_is_video_mode_scalable(video_mode: dc1394video_mode_t)
     -> dc1394bool_t;
    pub fn dc1394_is_video_mode_still_image(video_mode: dc1394video_mode_t)
     -> dc1394bool_t;
    pub fn dc1394_is_same_camera(id1: dc1394camera_id_t,
                                 id2: dc1394camera_id_t) -> dc1394bool_t;
    pub fn dc1394_feature_get_string(feature: dc1394feature_t)
     -> *const ::std::os::raw::c_char;
    pub fn dc1394_error_get_string(error: dc1394error_t)
     -> *const ::std::os::raw::c_char;
    pub fn dc1394_checksum_crc16(buffer: *const uint8_t,
                                 buffer_size: uint32_t) -> uint16_t;
}
